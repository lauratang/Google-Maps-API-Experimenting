<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
    <style type="text/css">
      html, body, #map-canvas {
        height: 100%;
        margin: 0px;
        padding: 0px
      }
    </style>
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?v=3.exp&signed_in=true"></script>
    <script>

    var map;
    var markers = [];
    var mapStyle = [{
      'featureType': 'all',
      'elementType': 'all',
      'stylers': [{'visibility': 'on'}]
    }, {
      'featureType': 'landscape',
      'elementType': 'geometry',
      'stylers': [{'visibility': 'on'}, {'color': '#fcfcfc'}]
    }, {
      'featureType': 'water',
      'elementType': 'labels',
      'stylers': [{'visibility': 'off'}]
    }, {
      'featureType': 'water',
      'elementType': 'geometry',
      'stylers': [{'visibility': 'on'}, {'hue': '#5f94ff'}, {'lightness': 60}]
    }];-

    google.maps.event.addDomListener(window, 'load', function() {
      map = new google.maps.Map(document.getElementById('map-canvas'), {
        center: { lat: 28, lng: 2 },
        zoom: 2,
        styles: mapStyle
      });
  
      var monthlyControlDiv = document.createElement('div');
      var monthlyControl = new MonthlyControl(monthlyControlDiv, map);
      monthlyControlDiv.index = 1;
      map.controls[google.maps.ControlPosition.BOTTOM_LEFT].push(monthlyControlDiv);
      
      var weeklyControlDiv = document.createElement('div');
      var weeklyControl = new WeeklyControl(weeklyControlDiv, map);
      weeklyControlDiv.index = 1;
      map.controls[google.maps.ControlPosition.BOTTOM_LEFT].push(weeklyControlDiv);

      var dailyControlDiv = document.createElement('div');
      var dailyControl = new DailyControl(dailyControlDiv, map);
      dailyControlDiv.index = 1;
      map.controls[google.maps.ControlPosition.BOTTOM_LEFT].push(dailyControlDiv);
      
      var hourlyControlDiv = document.createElement('div');
      var hourlyControl = new HourlyControl(hourlyControlDiv, map);
      hourlyControlDiv.index = 1;
      map.controls[google.maps.ControlPosition.BOTTOM_LEFT].push(hourlyControlDiv);
    });

// Function used for auto-population of markers. Cannot remove or keep track of markers.
//function eqfeed_callback(data) {
//  map.data.addGeoJson(data);
//}

<!-- Buttons and listeners -->
function MonthlyControl(controlDiv, map) {

  // Set CSS for the control border
  var controlUI = document.createElement('div');
  controlUI.style.backgroundColor = '#fff';
  controlUI.style.border = '2px solid #fff';
  controlUI.style.borderRadius = '3px';
  controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';
  controlUI.style.cursor = 'pointer';
  controlUI.style.marginBottom = '22px';
  controlUI.style.textAlign = 'center';
  controlUI.title = 'Click to show all 4.5+ earthquakes within the last month';
  controlDiv.appendChild(controlUI);

  // Set CSS for the control interior
  var controlText = document.createElement('div');
  controlText.style.color = 'rgb(25,25,25)';
  controlText.style.fontFamily = 'Roboto,Arial,sans-serif';
  controlText.style.fontSize = '16px';
  controlText.style.lineHeight = '38px';
  controlText.style.paddingLeft = '5px';
  controlText.style.paddingRight = '5px';
  controlText.innerHTML = 'Month';
  controlUI.appendChild(controlText);

  google.maps.event.addDomListener(controlUI, 'click', function() {

        // Create a <script> tag and set the USGS URL as the source.
        var script = document.createElement('script');
        script.setAttribute('src','http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/4.5_month.geojsonp');
        document.getElementsByTagName('head')[0].appendChild(script);

      // Clear the map
      setAllMap(null);
      markers = [];
      
      // Loop through the results array and place a marker for each
      // set of coordinates.
            window.eqfeed_callback = function(results) {
        var low = [151, 83, 34];   // color of mag 1.0
        var high = [5, 69, 54];  // color of mag 6.0 and above
        var minMag = 1.0;
        var maxMag = 6.0;
        
        for (var i = 0; i < results.features.length; i++) {
          var coords = results.features[i].geometry.coordinates;
          var latLng = new google.maps.LatLng(coords[1],coords[0]);

          var fraction = (Math.min(results.features[i].properties.mag, maxMag) - minMag) / (maxMag - minMag);
          var color = interpolateHsl(low, high, fraction);
          
          var marker = new google.maps.Marker({
            position: latLng,
            map: map,
            icon: {
              path: google.maps.SymbolPath.CIRCLE,
              strokeWeight: 0.5,
              strokeColor: '#fff',
              fillColor: color,
              fillOpacity: 2 / results.features[i].properties.mag,
              scale: Math.pow(results.features[i].properties.mag, 2)
            },
            zIndex: Math.floor(results.features[i].properties.mag)
          });
          markers.push(marker);
        }
      }
  });

}

function WeeklyControl(controlDiv, map) {
  
  // Set CSS for the control border
  var controlUI = document.createElement('div');
  controlUI.style.backgroundColor = '#fff';
  controlUI.style.border = '2px solid #fff';
  controlUI.style.borderRadius = '3px';
  controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';
  controlUI.style.cursor = 'pointer';
  controlUI.style.marginBottom = '22px';
  controlUI.style.textAlign = 'center';
  controlUI.title = 'Click to show 4.5+ earthquakes within the last week';
  controlDiv.appendChild(controlUI);

  // Set CSS for the control interior
  var controlText = document.createElement('div');
  controlText.style.color = 'rgb(25,25,25)';
  controlText.style.fontFamily = 'Roboto,Arial,sans-serif';
  controlText.style.fontSize = '16px';
  controlText.style.lineHeight = '38px';
  controlText.style.paddingLeft = '5px';
  controlText.style.paddingRight = '5px';
  controlText.innerHTML = 'Week';
  controlUI.appendChild(controlText);

  // Setup the click event listeners
  google.maps.event.addDomListener(controlUI, 'click', function() {

        // Create a <script> tag and set the USGS URL as the source.
        var script = document.createElement('script');
        script.setAttribute('src','http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/4.5_week.geojsonp');
        document.getElementsByTagName('head')[0].appendChild(script);

      // Clear the map
      setAllMap(null);
      markers = [];
      
      // Loop through the results array and place a marker for each
      // set of coordinates.
      window.eqfeed_callback = function(results) {
        var low = [151, 83, 34];   // color of mag 1.0
        var high = [5, 69, 54];  // color of mag 6.0 and above
        var minMag = 1.0;
        var maxMag = 6.0;
        
        for (var i = 0; i < results.features.length; i++) {
          var coords = results.features[i].geometry.coordinates;
          var latLng = new google.maps.LatLng(coords[1],coords[0]);

          var fraction = (Math.min(results.features[i].properties.mag, maxMag) - minMag) / (maxMag - minMag);
          var color = interpolateHsl(low, high, fraction);
          
          var marker = new google.maps.Marker({
            position: latLng,
            map: map,
            icon: {
              path: google.maps.SymbolPath.CIRCLE,
              strokeWeight: 0.5,
              strokeColor: '#fff',
              fillColor: color,
              fillOpacity: 2 / results.features[i].properties.mag,
              scale: Math.pow(results.features[i].properties.mag, 2)
            },
            zIndex: Math.floor(results.features[i].properties.mag)
          });
          markers.push(marker);
        }
      }
  });

}

function DailyControl(controlDiv, map) {

  // Set CSS for the control border
  var controlUI = document.createElement('div');
  controlUI.style.backgroundColor = '#fff';
  controlUI.style.border = '2px solid #fff';
  controlUI.style.borderRadius = '3px';
  controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';
  controlUI.style.cursor = 'pointer';
  controlUI.style.marginBottom = '22px';
  controlUI.style.textAlign = 'center';
  controlUI.title = 'Click to show all earthquakes in the last 24 hours';
  controlDiv.appendChild(controlUI);

  // Set CSS for the control interior
  var controlText = document.createElement('div');
  controlText.style.color = 'rgb(25,25,25)';
  controlText.style.fontFamily = 'Roboto,Arial,sans-serif';
  controlText.style.fontSize = '16px';
  controlText.style.lineHeight = '38px';
  controlText.style.paddingLeft = '5px';
  controlText.style.paddingRight = '5px';
  controlText.innerHTML = 'Day';
  controlUI.appendChild(controlText);

  // Setup the click event listeners
  google.maps.event.addDomListener(controlUI, 'click', function() {

        // Create a <script> tag and set the USGS URL as the source.
        var script = document.createElement('script');
        script.setAttribute('src','http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_day.geojsonp');
        document.getElementsByTagName('head')[0].appendChild(script);

      // Clear the map
      setAllMap(null);
      markers = [];
      
      // Loop through the results array and place a marker for each
      // set of coordinates.
            window.eqfeed_callback = function(results) {
        var low = [151, 83, 34];   // color of mag 1.0
        var high = [5, 69, 54];  // color of mag 6.0 and above
        var minMag = 1.0;
        var maxMag = 6.0;
        
        for (var i = 0; i < results.features.length; i++) {
          var coords = results.features[i].geometry.coordinates;
          var latLng = new google.maps.LatLng(coords[1],coords[0]);

          var fraction = (Math.min(results.features[i].properties.mag, maxMag) - minMag) / (maxMag - minMag);
          var color = interpolateHsl(low, high, fraction);
          
          var marker = new google.maps.Marker({
            position: latLng,
            map: map,
            icon: {
              path: google.maps.SymbolPath.CIRCLE,
              strokeWeight: 0.5,
              strokeColor: '#fff',
              fillColor: color,
              fillOpacity: 2 / results.features[i].properties.mag,
              scale: Math.pow(results.features[i].properties.mag, 2)
            },
            zIndex: Math.floor(results.features[i].properties.mag)
          });
          markers.push(marker);
        }
      }
  });
}

function HourlyControl(controlDiv, map) {

  // Set CSS for the control border
  var controlUI = document.createElement('div');
  controlUI.style.backgroundColor = '#fff';
  controlUI.style.border = '2px solid #fff';
  controlUI.style.borderRadius = '3px';
  controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';
  controlUI.style.cursor = 'pointer';
  controlUI.style.marginBottom = '22px';
  controlUI.style.textAlign = 'center';
  controlUI.title = 'Click to show all earthquakes within the hour';
  controlDiv.appendChild(controlUI);

  // Set CSS for the control interior
  var controlText = document.createElement('div');
  controlText.style.color = 'rgb(25,25,25)';
  controlText.style.fontFamily = 'Roboto,Arial,sans-serif';
  controlText.style.fontSize = '16px';
  controlText.style.lineHeight = '38px';
  controlText.style.paddingLeft = '5px';
  controlText.style.paddingRight = '5px';
  controlText.innerHTML = 'Hour';
  controlUI.appendChild(controlText);

  // Setup the click event listeners
  google.maps.event.addDomListener(controlUI, 'click', function() {

        // Create a <script> tag and set the USGS URL as the source.
        var script = document.createElement('script');
        script.setAttribute('src','http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_hour.geojsonp');
        document.getElementsByTagName('head')[0].appendChild(script);

      // Clear the map
      setAllMap(null);
      markers = [];
      
      // Loop through the results array and place a marker for each
      // set of coordinates.
      window.eqfeed_callback = function(results) {
        var low = [151, 83, 34];   // color of mag 1.0
        var high = [5, 69, 54];  // color of mag 6.0 and above
        var minMag = 1.0;
        var maxMag = 6.0;
        
        for (var i = 0; i < results.features.length; i++) {
          var coords = results.features[i].geometry.coordinates;
          var latLng = new google.maps.LatLng(coords[1],coords[0]);

          var fraction = (Math.min(results.features[i].properties.mag, maxMag) - minMag) / (maxMag - minMag);
          var color = interpolateHsl(low, high, fraction);
          
          var marker = new google.maps.Marker({
            position: latLng,
            map: map,
            icon: {
              path: google.maps.SymbolPath.CIRCLE,
              strokeWeight: 0.5,
              strokeColor: '#fff',
              fillColor: color,
              fillOpacity: 2 / results.features[i].properties.mag,
              scale: Math.pow(results.features[i].properties.mag, 2)
            },
            zIndex: Math.floor(results.features[i].properties.mag)
          });
          markers.push(marker);
        }
      }
  });
}

<!-- Marker styling functions -->
function interpolateHsl(lowHsl, highHsl, fraction) {
  var color = [];
  for (var i = 0; i < 3; i++) {
    // Calculate color based on the fraction.
    color[i] = (highHsl[i] - lowHsl[i]) * fraction + lowHsl[i];
  }

  return 'hsl(' + color[0] + ',' + color[1] + '%,' + color[2] + '%)';
}
function setAllMap(map) {
  for (var i = 0; i < markers.length; i++) {
    markers[i].setMap(map);
  }
}


    </script>
  </head>
  <body id="map-container">
    <div id="map-canvas"></div>
  </body>
</html>
